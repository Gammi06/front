@charset "utf-8";

/* 웹사이트 전체를 싸는 영역*/
#wrap {}

/* #header_start----- */
#header {
    /**/background-color: #dde;
}

#header .logo {
    text-align: center;
    height: 70px;
    line-height: 70px;
    /*
    1) 웹의 큰 구조에서 1번째 자식이 위쪽으로
    여백을 가질때 margin속성을 사용하면
    실제로는 부모태그의 위로 여백을 가지게 됨
    그래서 margin값을 사용하면 X
    => 대체해서 padding으로 속성값을 적용하기도 함
    
    2) 원하는 높이에서 글자를 세로, 가운데 배치하는 공식
    {height:값; line-height값;}
    */
}

/* 한번만 쓰이는 클래스이름은 앞에 생략해도 됨*/
#header .gnb {
    border-top: 1px solid #aaa;
    display: flex; /* 자식인 gnb를 가운데정렬하기 위해서 display: flex */
    justify-content: center;
} 

#header .gnb h2 {
    display: none;
    /*
    시맨틱 태그 사용시 제목태그로 영역 타이틀을 지정해 줘야 함
    실제 ui화면상 표기되지 않을 것임으로 삭제함
    { display: none; }적용시 해당태그 자체가 아예 작성하지 않은 것처럼 인식됨
    */
}

#header .gnb ul {
    display: flex;
    width: 750px; /* 박스모델: 150*5 = 750px */
    /**/background-color: #cc2;
}

#header .gnb ul li {
    flex: 0 0 150px; /* 맨마지막: 플렉스width길이 */
    height: 80px;
    line-height: 80px;
    text-align: center;
}

#header .gnb ul li a {
    font-size: 20px;
    font-weight: 700; /* bold가능 */
}

#header .gnb ul li:hover a {
    color: #19f;
    /*
    a:hover 로 지정해도 색상은 동일하게 적용되지만,
    li:hover로 대상을 봐야하는 이유는 추후 depth2, 3...의
    submenu의 hover범주까지 고려해야 실제 기능 구현이 가능하기 때문에
    li를 대상으로 지정하는 것이 좋음
    */
}

#header .gnb ul .active a {
    color: #19f;
}
/* a태그의 글자색상 변경은 a태그 색상을 변경해야 인식됨
:reset.css 초기화 설정때 지정한 a태그의 색상설정 때문 */

/* #main_visual_start----- */
#main_visual {
    width: 100%;
    height: 700px;
    background: url(../img/main_visual.jpg) no-repeat center center;
    background-size: cover;
}

#main_visual .inner {
    width: 1200px;
    height: 700px;
    /**/background-color: #cce;
    margin: 0 auto;
    /*
    == 블록요소 태그 가운데 배치 공식 ==
    블록요소태그{ width: 값; margin: 0 auto; }
    
    //줄이는게 인식이 안되면 밑처럼 풀어서 써야함
    margin-top: 0;
    margin-bottom: 0;
    margin-left: auto;
    margin-right: auto;

    => 여백 상, 하는 0(없음)
       여백 좌, 우는 auto(자동)
       "좌우 자동으로 여백을 배치해서 가운데 정렬"

    margin: 0 auto 0 auto;
    margin: 0 auto 0;
    margin: 0 auto;
    */
    position: relative;
}

#main_visual .inner .mv_txt {
    padding-top: 220px;
    margin-left: 150px;
    /*
    웹사이트의 특징상 큰 영역구조의 첫번째 자식태그의
    top 또는 bottom을 여백으로 지정할 경우,
    부모태그 전체로 여백이 지정되는 현상이 발생함
    => margin 대신 padding 및 다른 속성으로 대체 사용
    */
}

#main_visual .inner .mv_txt .tit {
    font-size: 45px;
    line-height: 51px;
}

#main_visual .inner .mv_txt .more {
    width: 150px;
    height: 40px;
    background-color: #19f;
    text-align: center;
    line-height: 40px;
    margin-top: 40px;
}

#main_visual .inner .mv_txt .more a {
    color: #fff;
    display: block;
    /* a태그는 inline요소로 공간을 가질 수 없음
    글자에만 a링크가 적용되면 ux측면에서 부적합함
    파랑버튼 전체를 a링크대상으로 인식시켜야하므로
    block요소로 처리하여 인식시킴
    */
}

#main_visual .inner .btn_prev,
#main_visual .inner .btn_next {
    width: 50px;
    height: 50px;
    border-radius: 50px;
    border: 2px solid #00f;
    text-align: center;
    line-height: 50px;
    position: absolute;
    top: 50%; margin-top: -27px; left: 50%;
    /*
    == 태그 width에서 가운데 배치하는 3가지 공식 ==
    1. inline요소:      { text-align: center; }
    2. block요소(기본): { width:값, margin: 0 auto }
    3. block요소 : 블록요소 태그가 position속성을 가졌을 때
       margin: 0 auto; 속성값을 함께 사용할 수 없음 -> 적용안됨
       {position: absolute;
        left: 50%;
        margin-left: -현태그의 가로너비의 반값;
        top 또는 bottom: 값;}
    ** 부모태그 공간값이 정확하지 않고, 100%비율로 기준을 잡고 있을 경우에는
       px고정단위를 적용할 수 없으므로 %로 위치값을 지정해야 함
    */
}

#main_visual .inner .btn_prev {
    margin-left: -600px;
}
#main_visual .inner .btn_next {
    margin-left: 546px;
}

#main_visual .inner .btn_prev a,
#main_visual .inner .btn_next a {
    color: #00f;
    display: block;
}

#main_visual .inner .btn_prev:hover,
#main_visual .inner .btn_next:hover {
    background: #00f;
}

#main_visual .inner .btn_prev:hover a,
#main_visual .inner .btn_next:hover a {
    color: #fff;
}

/* #container_start----- */
#container {}

/* 공통 style */
#container .cont_tit {
    font-size: 40px;
    text-align: center;
    margin-bottom: 50px;
}

/* 공통 style */
#container .inner {
    width: 1200px;
    margin: 0 auto;
    /**/background-color: #cea;
}

.cont01 {
    background-color: #8df;
    padding: 100px 0;
}

.cont01 .product {
    display: -webkit-flex;
    display: flex;
    justify-content: space-between;
}

.cont01 .product article {
    width: 580px;
    border: 1px solid #333;
    background-color: #fff;
}

.cont01 .product article .photo {
    width: 580px;
    height: 400px;
    /**/background-color: #cee;
}

.cont01 .product article .photo img,
.cont02 .service article .photo img {
    width: 100%;
    height: auto;
}

.cont01 .product article dl {
    padding: 30px 0;
    text-align: center;
}

.cont01 .product article dl dt {
    font-size: 30px;
    line-height: 30px;
    font-weight: bold;
    margin-bottom: 15px;
}

.cont01 .product article dl dd {}

.cont02 {
    padding: 80px 0;
}

.cont02 .service {
    display: -webkit-flex;
    display: flex;
    justify-content: space-between;
}

.cont02 .service article:hover {
    background-color: #00f;
}

.cont02 .service article {
    width: 285px;
    background-color: #19f;
}

.cont02 .service article .photo{
    width: 285px;
    height: 300px;
    background-color: #ddd;
}

.cont02 .service article dl{
    padding: 30px 0;
    color: #fff;
    text-align: center;
}

.cont02 .service article dl dt{
    font-size: 30px;
    line-height: 34px;
    font-weight: bold;
    margin-bottom: 10px;
}

.cont02 .service article dl dd{}


/* #footer_start----- */
#footer {
    width: 100%;
    height: 150px;
    padding-top: 30px;  /*h180*/
    border-top: 1px solid #333;
    background-color: #fce;
}

#footer #footer_inner {}

#footer #footer_inner .flogo {}

#footer #footer_inner .footer_info {}

#footer #footer_inner .footer_info .fmenu {}

#footer #footer_inner .footer_info .fmenu ul {}

#footer #footer_inner .footer_info .fmenu ul li {}

#footer #footer_inner .footer_info .finfo {}

#footer #footer_inner .footer_info .finfo p {}

#footer #footer_inner .footer_info .finfo span {}

#footer #footer_inner .footer_info .fcopy {}

#footer #footer_inner .familly {}